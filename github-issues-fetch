#!/usr/bin/env python

import sys, getopt
from hubr import Hubr

def usage():
    print "usage: github-issues-fetch -m <milestone-name> (-d <since_date>) (-l <labels>)"
    print "flags: -o OPEN tickets"
    print "       -c CLOSED tickets (default)"
    sys.exit()

# query options
opts = {'state':'closed'}

try:
    optlist, args = getopt.getopt(sys.argv[1:], ":d:hl:m:co")
except getopt.GetoptError, e:
    print str(e)
    usage()
    sys.exit(2)

# parse args list
for o, a in optlist:
    if o == '-l':
        opts['labels'] = a
    elif o == '-d':
        opts['since'] = a
    elif o == '-c':
        opts['state'] = 'closed'
    elif o == '-o':
        opts['state'] = 'open'
    elif o == '-m':
        opts['milestone'] = a
    elif o == '-h':
        usage()
        sys.exit()

# load an configure hubr instance
hubr = Hubr.from_config('./.hubrrc')
if not opts.has_key('milestone') and hubr.has_option('milestone'):
    opts['milestone'] = hubr.get_option('milestone')

# fetch issues
issues = hubr.get_issues(**opts)
if issues and len(issues):
    for i in issues:
        print '%d: %s' % (i["number"], i["title"])
