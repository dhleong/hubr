#!/bin/bash

# issues config
MILESTONE="2.7.4"
STATE=closed

#
# imports
#

SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

source ${DIR}/gh-cmd

#
# Methods
#

get_milestone() {
    # get the number for a given milestone
    #
    # @param NAME name of the milestone
    # @return -1 if not found, else the number
    #

    NAME=$1

    AWK='BEGIN{milestone="-1"}'                           # initialize
    AWK+='/number/{gsub(/[ ,:]/, "", $3); lastNumber=$3}' # number is always first; save it
    AWK+='/"'${NAME}'"/{milestone=lastNumber; exit}'      # if the line matches "MILESTONE", save number
    AWK+='END{print milestone}'                           # print the number

    # fetch, and feed to our nice script
    gh_get "${REPO}/milestones" | awk -F\" "$AWK" 
}

get_issues() {
    # get json of issues for a given milestone and state
    #
    # @param MILENUM milestone number; can be fetched via get_milestone()
    # @param STATE "open" or "closed"
    # @param SINCE (optional) date
    #

    MILENUM=$1
    STATE=$2
    SINCE=$3

    sinceParam=""
    if [ z != z$SINCE ]
    then
        sinceParam="&since=$SINCE"
        echo $sinceParam
    fi

    gh_get "${REPO}/issues?state=${STATE}&milestone=${MILENUM}${sinceParam}"
}

#
# Script
#

if [ $# -ge 2 ]
then
    MILESTONE=$1
    SINCE=$2
else 
    MILESTONE=$1
fi

# fetch the milestone
echo "Fetching milestone '${MILESTONE}'..."
mileNum=$(get_milestone ${MILESTONE})

if [ $mileNum -eq -1 ]
then
    echo "No such milestone \`\`${MILESTONE}''"
    exit
fi

sinceLabel=""
if [ z != z$SINCE ]
then
    sinceLabel=" since $SINCE"
fi

echo "done; Fetching ${STATE} issues${sinceLabel}..."
echo ''

AWK='/number/{gsub(/[ ,:]/, "", $3); lastNumber=$3}' # number is always first; save it
AWK+='/title/{print lastNumber ": " $4}'      # if the line matches "MILESTONE", save number

    #| sed 's/.*"title": "\(.*\)",/\1/' \
get_issues $mileNum $STATE $SINCE \
    | grep -v "${MILESTONE}" \
    | awk -F\" "$AWK" \
    | sed 's/\\"/"/g'

